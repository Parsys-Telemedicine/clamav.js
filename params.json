{"name":"Clamavjs","tagline":"A node.js library for ClamAV","body":"clamavjs\r\n========\r\n\r\nA node.js library for ClamAV\r\n-----------------------\r\n\r\n\r\nThis node.js library is intended to be served as a bridge between a node.js application and the ClamAV antivirus engine.\r\n\r\nThe library uses TCP socket (INET) to communicate with ClamAV daemon (clamd) through ClamAV's INSTREAM command. To use clamavjs library, use the following:\r\n\r\n```\r\nclamavjs=require('clamavjs');\r\nclamav = new clamavjs(3310, '127.0.0.1');\r\nclamav.scan('<directory>', function(filename, malicious, err) {\r\n    if (malicious) {\r\n        console.log(filename+': '+malicious+' FOUND');\r\n    }\r\n    else if (err) {\r\n        console.log(filename+': '+err);\r\n    }\r\n    else {\r\n        console.log(filename+': OK');\r\n    }\r\n});\r\n```\r\n\r\nwill scan through the \"directory\" of a Linux machine and report any malicious files detected by ClamAV.\r\n\r\n\r\nPerformance\r\n-----------\r\nThe clamavjs library is implemented in an asynchronous way. That is supposed to perform better when I/O is the bottleneck.\r\n\r\nContact\r\n-------\r\nIf you have trouble with the library or have questions, check out the GitHub repository at http://github.com/yotang/clamavjs and Iâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}